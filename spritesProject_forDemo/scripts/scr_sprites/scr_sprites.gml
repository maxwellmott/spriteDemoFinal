enum ALIGNMENTS {
	NATURAL,
	MECHANICAL,
	ASTRAL,
	HEIGHT
}

enum SPRITES {
	GEMBO,
	PONDILE,
	HACHACHACHA,
	PODRIC,
	NEEDLEPAW,
	SUDSY,
	BOOKISH,
	PLEEP,
	GLIDRAKE,
	FURVOR,
	ZEPHIRA,
	FISHMONGER,
	SONGBIRD,
	EXONOLITH,
	DRUMLINE,
	MIRREFRACT,
	FORTUGA,
	TIKDOFF,
	ARRAYNGE,
	SCROOTINEYES,
	JOE,
	CANUKI,
	GASTRONIMO,
	FLOTSU,
	BLITZKRANE,
	HEATSUNE,
	FLOOPWALKER,
	STEWARDRAKE,
	DOORMAUS,
	PLASMASS,
	SHREDATOR,
	JACKHAMMER,
	STINKLOPS,
	DURENDOUX,
	CENOTOMB,
	CLEANSAGE,
	WYRMPOOL,
	CRAGMA,
	CORVOLT,
	CHROMOSILOS,
	DOMINO,
	ANACHRONAUT,
	OMNOST,
	PRISMATTER,
	KRONARC,
	COSMALCOS,
	HEIGHT
}

enum SPRITE_PARAMS {
	ID,
	NAME,
	SPRITE,
	ALIGNMENT,
	SPELL_LIST,
	POWER,
	RESISTANCE,
	FIRE,
	WATER,
	STORM,
	EARTH,
	AGILITY,
	LUCK,
	SIZE,
	HEIGHT
}

enum SPRITE_SIZES {
	X_SMALL,
	SMALL,
	MEDIUM,
	LARGE,
	X_LARGE,
	HEIGHT
}

enum SPRITE_POSES {
	IDLE,
	ATTACK,
	SPELL,
	HURT,
	HEIGHT
}

#region	CREATE ALL SPELL LISTS

	#region		GEMBO
		var gemboSpells = ds_list_create();
		
		ds_list_add(gemboSpells,
			SPELLS.FIREBALL,
			SPELLS.SHOCK,
			SPELLS.EXPEL_FORCE,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.EMPATHIZE,
			SPELLS.ARC_BLAST,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.SHIFT_PERSPECTIVE,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.DIONS_GAMBLING_BLAST,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.FULL_THRUST
		);
	#endregion
	
	#region		pondile
		var pondileSpells = ds_list_create();
		
		ds_list_add(pondileSpells,
			SPELLS.DECAY,
			SPELLS.TYPHOON,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.WATERLOG,
			SPELLS.RAPID_STRIKE,
			SPELLS.QUICKSAND,
			SPELLS.DOWNPOUR,
			SPELLS.LANDSLIDE,
			SPELLS.ENDLESS_RIVER
		);
	#endregion

	#region		HACHA-CHACHA
		var hachaSpells = ds_list_create();
		
		ds_list_add(hachaSpells,
			SPELLS.FIREBALL,
			SPELLS.EMPATHIZE,
			SPELLS.PYROKINESIS,
			SPELLS.PURIFYING_FLAME,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.BURN_OUT,
			SPELLS.LAVA_SPIRE
		);
	#endregion

	#region		PODRIC
		var podricSpells = ds_list_create();
		
		ds_list_add(podricSpells,
			SPELLS.DECAY,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.RAPID_STRIKE,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.SNEAK_ATTACK,
			SPELLS.DIONS_PARRY,
			SPELLS.WIND_SLICE,
			SPELLS.SPHERAS_CURSE,
			SPELLS.DESTABILIZING_BLOW,
			SPELLS.FULL_THRUST
		);
	#endregion
	
	#region		NEEDLEPAW
		var needlepawSpells = ds_list_create();
		
		ds_list_add(needlepawSpells,
			SPELLS.SHOCK,
			SPELLS.RAPID_STRIKE,
			SPELLS.LOOMING_DANGER,
			SPELLS.INTERCEPT,
			SPELLS.LORD_MOGRADTHS_RAGE,
			SPELLS.DRAIN_LIFEFORCE,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.SNEAK_ATTACK,
			SPELLS.DIONS_BARTER_TRICK,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.TELEKINETIC_BLAST
		);
	#endregion
	
	#region		SUDSY
		var sudsySpells = ds_list_create();
		
		ds_list_add(sudsySpells,
			SPELLS.HOLY_WATER,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.WATERLOG,
			SPELLS.STEAM_BATH,
			SPELLS.EMPATHIZE,
			SPELLS.OSMOSIS,
			SPELLS.JABULS_FIGHT_SONG
		);
	#endregion
	
	#region		BOOKISH
		var bookishSpells = ds_list_create();
		
		ds_list_add(bookishSpells,
			SPELLS.SOLAR_FLARE,
			SPELLS.TIDAL_FORCE,
			SPELLS.NEBULA_STORM,
			SPELLS.TECTONIC_SHIFT,
			SPELLS.FIREBALL,
			SPELLS.SHOCK,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.TYPHOON,
			SPELLS.HEALING_LIGHT,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.INTERCEPT,
			SPELLS.EMPATHIZE,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.CRECIAS_CRYSTAL_SPIKES,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.REARRANGE
		);
	#endregion
	
	#region		PLEEP
		var pleepSpells = ds_list_create();
		
		ds_list_add(pleepSpells,
			SPELLS.FIREBALL,
			SPELLS.EXPEL_FORCE,
			SPELLS.TYPHOON,
			SPELLS.AIR_PRESSURE,
			SPELLS.RAPID_STRIKE,
			SPELLS.INTERCEPT,
			SPELLS.EMPATHIZE,
			SPELLS.HELLFIRE,
			SPELLS.PYROKINESIS,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.WIND_SLICE,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.CLOUD_BREAK
		);
	#endregion
		
	#region		GLIDRAKE
		var glidrakeSpells = ds_list_create();
		
		ds_list_add(glidrakeSpells,
			SPELLS.NEBULA_STORM,
			SPELLS.FIREBALL,
			SPELLS.TYPHOON,
			SPELLS.AIR_PRESSURE,
			SPELLS.RAPID_STRIKE,
			SPELLS.INTERCEPT,
			SPELLS.BALL_LIGHTNING,
			SPELLS.PYROKINESIS,
			SPELLS.ARC_BLAST,
			SPELLS.DIONS_PARRY,
			SPELLS.WIND_SLICE,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.CLOUD_BREAK
		);
	#endregion
	
	#region		FURVOR
		var furvorSpells = ds_list_create();
		
		ds_list_add(furvorSpells,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.SUPERBLOOM,
			SPELLS.RAPID_STRIKE,
			SPELLS.LOOMING_DANGER,
			SPELLS.INTERCEPT,
			SPELLS.LORD_MOGRADTHS_RAGE,
			SPELLS.HIKAMS_WINTER_SPELL,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.SNEAK_ATTACK,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.SPHERAS_CURSE,
			SPELLS.DESTABILIZING_BLOW,
			SPELLS.FULL_THRUST
		);
	#endregion	
	
	#region		ZEPHIRA
		var zephiraSpells = ds_list_create();

		ds_list_add(zephiraSpells,
			SPELLS.NEBULA_STORM,
			SPELLS.SHOCK,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.TYPHOON,
			SPELLS.HEALING_LIGHT,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.AIR_PRESSURE,
			SPELLS.RAPID_STRIKE,
			SPELLS.LOOMING_DANGER,
			SPELLS.DRAIN_LIFEFORCE,
			SPELLS.HIKAMS_WINTER_SPELL,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.SKYDIVE,
			SPELLS.CRECIAS_CRYSTAL_SPIKES,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.REARRANGE,
			SPELLS.SNEAK_ATTACK,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.DIONS_BARTER_TRICK,
			SPELLS.WIND_SLICE,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.CLOUD_BREAK,
			SPELLS.TELEKINETIC_BLAST,
			SPELLS.SPHERAS_DEMISE
		);
	#endregion
	
	#region		FISHMONGER
		var fishmongerSpells = ds_list_create();
		
		ds_list_add(fishmongerSpells,
			SPELLS.TIDAL_FORCE,
			SPELLS.EXPEL_FORCE,
			SPELLS.TYPHOON,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.WATERLOG,
			SPELLS.LOOMING_DANGER,
			SPELLS.UNDERTOW,
			SPELLS.DOWNPOUR,
			SPELLS.FLASH_FREEZE,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.DIONS_PARRY,
			SPELLS.DIONS_BARTER_TRICK,
			SPELLS.WIND_SLICE,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.ENDLESS_RIVER,
			SPELLS.CLOUD_BREAK,
			SPELLS.DESTABILIZING_BLOW,
			SPELLS.FULL_THRUST,
		);
	#endregion
	
	#region		SONGBIRD
		var songbirdSpells = ds_list_create();
		
		ds_list_add(songbirdSpells,
			SPELLS.EXPEL_FORCE,
			SPELLS.TYPHOON,
			SPELLS.HEALING_LIGHT,
			SPELLS.AIR_PRESSURE,
			SPELLS.SUPERBLOOM,
			SPELLS.EMPATHIZE,
			SPELLS.HIKAMS_WINTER_SPELL,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.SHIFT_PERSPECTIVE,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.SKYDIVE,
			SPELLS.PURIFYING_FLAME,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.REARRANGE,
			SPELLS.DIONS_GAMBLING_BLAST,
			SPELLS.DIONS_BARTER_TRICK,
			SPELLS.WIND_SLICE,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.SPHERAS_CURSE,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.CLOUD_BREAK,
			SPELLS.TELEKINETIC_BLAST,
			SPELLS.BROADCAST_DATA
		);	
	#endregion
	
	#region		EXONOLITH
		var exonolithSpells = ds_list_create();
		
		ds_list_add(exonolithSpells,
			SPELLS.SOLAR_FLARE,
			SPELLS.TECTONIC_SHIFT,
			SPELLS.SHOCK,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.HEALING_LIGHT,
			SPELLS.DRAIN_LIFEFORCE,
			SPELLS.PYROKINESIS,
			SPELLS.ARC_BLAST,
			SPELLS.LANDSLIDE,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.TREMOR,
			SPELLS.PURIFYING_FLAME,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.CLOUD_BREAK,
			SPELLS.TELEKINETIC_BLAST
		);
	#endregion
	
	#region		DRUMLINE
		var drumlineSpells = ds_list_create();
		
		ds_list_add(drumlineSpells,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.EMPATHIZE,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.REARRANGE,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.DIONS_GAMBLING_BLAST,
		);
	#endregion
	
	#region		MIRREFRACT
		var mirrefractSpells = ds_list_create();
		
		ds_list_add(mirrefractSpells,
			SPELLS.FIREBALL,
			SPELLS.SHOCK,
			SPELLS.EXPEL_FORCE,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.RAPID_STRIKE,
			SPELLS.INTERCEPT,
			SPELLS.BALL_LIGHTNING,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.SHIFT_PERSPECTIVE,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.DIONS_PARRY,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.DESTABILIZING_BLOW,
			SPELLS.FULL_THRUST
		);
	#endregion
	
	#region		FORTUGA
		var fortugaSpells = ds_list_create();
		
		ds_list_add(fortugaSpells,
			SPELLS.TIDAL_FORCE,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.WATERLOG,
			SPELLS.INTERCEPT,
			SPELLS.UNDERTOW,
			SPELLS.EMPATHIZE,
			SPELLS.DOWNPOUR,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.ENDLESS_RIVER,
		);
	#endregion
	
	#region		TIKDOFF
		var tikdoffSpells = ds_list_create();
		
		ds_list_add(tikdoffSpells,
			SPELLS.SOLAR_FLARE,
			SPELLS.FIREBALL,
			SPELLS.EXPEL_FORCE,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.HELLFIRE,
			SPELLS.LORD_MOGRADTHS_RAGE,
			SPELLS.PYROKINESIS,
			SPELLS.ARC_BLAST,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.BURN_OUT,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.LAVA_SPIRE,
			SPELLS.DESTABILIZING_BLOW,
			SPELLS.FULL_THRUST
		);
	#endregion
	
	#region		ARRAYNGE
		var arrayngeSpells = ds_list_create();
		
		ds_list_add(arrayngeSpells,
			SPELLS.SHOCK,
			SPELLS.EXPEL_FORCE,
			SPELLS.INTERCEPT,
			SPELLS.ARC_BLAST,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.REARRANGE,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.BROADCAST_DATA,
			SPELLS.COLLAPSE_SPACE
		);
	#endregion
	
	#region		SCROOTINEYES
		var scrootineyesSpells = ds_list_create();
		
		ds_list_add(scrootineyesSpells,
			SPELLS.DECAY,
			SPELLS.TYPHOON,
			SPELLS.AIR_PRESSURE,
			SPELLS.RAPID_STRIKE,
			SPELLS.LOOMING_DANGER,
			SPELLS.INTERCEPT,
			SPELLS.EMPATHIZE,
			SPELLS.SKYDIVE,
			SPELLS.SNEAK_ATTACK,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.WIND_SLICE,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.CLOUD_BREAK,
			SPELLS.BROADCAST_DATA
		);
	#endregion
	
	#region		JOE
		var joeSpells = ds_list_create();
		
		ds_list_add(joeSpells,
			SPELLS.FIREBALL,
			SPELLS.EXPEL_FORCE,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.WATERLOG,
			SPELLS.INTERCEPT,
			SPELLS.STEAM_BATH,
			SPELLS.DRAIN_LIFEFORCE,
			SPELLS.OSMOSIS,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.BURN_OUT,
			SPELLS.EXPAND_TIME
		);
	#endregion
	
	#region		CANUKI
		var canukiSpells = ds_list_create();
		
		ds_list_add(canukiSpells,
			SPELLS.DECAY,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.SKYDIVE,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.STINKBOMB,
			SPELLS.SPHERAS_DEMISE
		);
	#endregion
	
	#region		GASTRONIMO
		var gastronimoSpells = ds_list_create();
		
		ds_list_add(gastronimoSpells,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.HEALING_LIGHT,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.STEAM_BATH,
			SPELLS.LANDSLIDE,
			SPELLS.SHIFT_PERSPECTIVE,
			SPELLS.TREMOR,
			SPELLS.PURIFYING_FLAME,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.DIONS_BARTER_TRICK,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.DESTABILIZING_BLOW,
			SPELLS.FULL_THRUST
		);
	#endregion
	
	#region		FLOTSU
		var flotsuSpells = ds_list_create();
		
		ds_list_add(flotsuSpells,
			SPELLS.TIDAL_FORCE,
			SPELLS.HOLY_WATER,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.TYPHOON,
			SPELLS.HEALING_LIGHT,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.WATERLOG,
			SPELLS.AIR_PRESSURE,
			SPELLS.INTERCEPT,
			SPELLS.STEAM_BATH,
			SPELLS.UNDERTOW,
			SPELLS.EMPATHIZE,
			SPELLS.DOWNPOUR,
			SPELLS.HIKAMS_WINTER_SPELL,
			SPELLS.OSMOSIS,
			SPELLS.FLASH_FREEZE,
			SPELLS.LANDSLIDE,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.SHIFT_PERSPECTIVE,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.TREMOR,
			SPELLS.SKYDIVE,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.WIND_SLICE,
			SPELLS.ENDLESS_RIVER,
			SPELLS.TELEKINETIC_BLAST
		);
	#endregion
	
	#region		BLITZKRANE
		var blitzkraneSpells = ds_list_create();
		
		ds_list_add(blitzkraneSpells,
			SPELLS.TIDAL_FORCE,
			SPELLS.NEBULA_STORM,
			SPELLS.HOLY_WATER,
			SPELLS.SHOCK,
			SPELLS.TYPHOON,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.WATERLOG,
			SPELLS.AIR_PRESSURE,
			SPELLS.RAPID_STRIKE,
			SPELLS.INTERCEPT,
			SPELLS.UNDERTOW,
			SPELLS.BALL_LIGHTNING,
			SPELLS.DOWNPOUR,
			SPELLS.ARC_BLAST,
			SPELLS.SKYDIVE,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.WIND_SLICE,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.CLOUD_BREAK,
			SPELLS.FULL_THRUST,
			SPELLS.EXPAND_TIME,
			SPELLS.SPHERAS_DEMISE
		);
	#endregion
	
	#region		HEATSUNE
		var heatsuneSpells = ds_list_create();
		
		ds_list_add(heatsuneSpells,
			SPELLS.SOLAR_FLARE,
			SPELLS.NEBULA_STORM,
			SPELLS.FIREBALL,
			SPELLS.SHOCK,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.HEALING_LIGHT,
			SPELLS.RAPID_STRIKE,
			SPELLS.HELLFIRE,
			SPELLS.BALL_LIGHTNING,
			SPELLS.LORD_MOGRADTHS_RAGE,
			SPELLS.DRAIN_LIFEFORCE,
			SPELLS.PYROKINESIS,
			SPELLS.ARC_BLAST,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.PURIFYING_FLAME,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.SNEAK_ATTACK,
			SPELLS.BURN_OUT,
			SPELLS.WIND_SLICE,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.LAVA_SPIRE,
			SPELLS.TELEKINETIC_BLAST,
			SPELLS.COLLAPSE_SPACE,
			SPELLS.SPHERAS_DEMISE
		);
			
	#endregion
	
	#region		FLOOPWALKER
		var floopwalkerSpells = ds_list_create();
		
		ds_list_add(floopwalkerSpells,
			SPELLS.SOLAR_FLARE,
			SPELLS.NEBULA_STORM,
			SPELLS.DECAY,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.HEALING_LIGHT,
			SPELLS.TYPHOON,
			SPELLS.AIR_PRESSURE,
			SPELLS.SUPERBLOOM,
			SPELLS.RAPID_STRIKE,
			SPELLS.STEAM_BATH,
			SPELLS.BALL_LIGHTNING,
			SPELLS.ARC_BLAST,
			SPELLS.LANDSLIDE,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.CRECIAS_CRYSTAL_SPIKES,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.CLOUD_BREAK,
			SPELLS.BROADCAST_DATA,
			SPELLS.EXPAND_TIME
		);
	#endregion
	
	#region		STEWARDRAKE
		var stewardrakeSpells = ds_list_create();
		
		ds_list_add(stewardrakeSpells,
			SPELLS.SOLAR_FLARE,
			SPELLS.NEBULA_STORM,
			SPELLS.HOLY_WATER,
			SPELLS.SHOCK,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.TYPHOON,
			SPELLS.HEALING_LIGHT,
			SPELLS.EMPATHIZE,
			SPELLS.PYROKINESIS,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.SKYDIVE,
			SPELLS.PURIFYING_FLAME,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.WIND_SLICE,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.CLOUD_BREAK
		);
	#endregion
	
	#region		DOORMAUS
		var doormausSpells = ds_list_create();
		
		ds_list_add(doormausSpells,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.HEALING_LIGHT,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.RAPID_STRIKE,
			SPELLS.INTERCEPT,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.REARRANGE,
			SPELLS.SNEAK_ATTACK,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.TELEKINETIC_BLAST,
			SPELLS.BROADCAST_DATA,
			SPELLS.COLLAPSE_SPACE,
		);
	#endregion
	
	#region		PLASMASS
		var plasmassSpells = ds_list_create();
		
		ds_list_add(plasmassSpells,
			SPELLS.FIREBALL,
			SPELLS.SHOCK,
			SPELLS.EXPEL_FORCE,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.AIR_PRESSURE,
			SPELLS.RAPID_STRIKE,
			SPELLS.INTERCEPT,
			SPELLS.BALL_LIGHTNING,
			SPELLS.ARC_BLAST,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.BURN_OUT,
			SPELLS.DESTABILIZING_BLOW,
			SPELLS.FULL_THRUST,
		);
	#endregion
	
	#region		SHREDATOR
		var shredatorSpells = ds_list_create();
		
		ds_list_add(shredatorSpells,
			SPELLS.TIDAL_FORCE,
			SPELLS.TYPHOON,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.RAPID_STRIKE,
			SPELLS.INTERCEPT,
			SPELLS.UNDERTOW,
			SPELLS.DOWNPOUR,
			SPELLS.SNEAK_ATTACK,
			SPELLS.ENDLESS_RIVER,
			SPELLS.FULL_THRUST
		);
	#endregion
	
	#region		JACKHAMMER
		var jackhammerSpells = ds_list_create();
		
		ds_list_add(jackhammerSpells,
			SPELLS.SHOCK,
			SPELLS.EXPEL_FORCE,
			SPELLS.RAPID_STRIKE,
			SPELLS.LOOMING_DANGER,
			SPELLS.HELLFIRE,
			SPELLS.LORD_MOGRADTHS_RAGE,
			SPELLS.PYROKINESIS,
			SPELLS.ARC_BLAST,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.SNEAK_ATTACK,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.DIONS_GAMBLING_BLAST,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.FULL_THRUST,
			SPELLS.SPHERAS_DEMISE
		);
	#endregion
	
	#region		STINKLOPS
		var stinklopsSpells = ds_list_create();
		
		ds_list_add(stinklopsSpells,
			SPELLS.FIREBALL,
			SPELLS.DECAY,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.LOOMING_DANGER,
			SPELLS.INTERCEPT,
			SPELLS.HELLFIRE,
			SPELLS.QUICKSAND,
			SPELLS.PYROKINESIS,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.STINKBOMB,
			SPELLS.SPHERAS_CURSE,
			SPELLS.CLOUD_BREAK,
			SPELLS.FULL_THRUST,
			SPELLS.DESTABILIZING_BLOW,
		);
	#endregion
	
	#region		DURENDOUX
		var durendouxSpells = ds_list_create();
		
		ds_list_add(durendouxSpells,
			SPELLS.TECTONIC_SHIFT,
			SPELLS.HOLY_WATER,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.HEALING_LIGHT,
			SPELLS.QUICKSAND,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.CRECIAS_CRYSTAL_SPIKES,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.SPHERAS_CURSE
		);
	#endregion
	
	#region		CENOTOMB
		var cenotombSpells = ds_list_create();
		
		ds_list_add(cenotombSpells,
			SPELLS.FIREBALL,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.LOOMING_DANGER,
			SPELLS.HELLFIRE,
			SPELLS.LORD_MOGRADTHS_RAGE,
			SPELLS.DRAIN_LIFEFORCE,
			SPELLS.PYROKINESIS,
			SPELLS.ARC_BLAST,
			SPELLS.HIKAMS_WINTER_SPELL,
			SPELLS.FLASH_FREEZE,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.SHIFT_PERSPECTIVE,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.CRECIAS_CRYSTAL_SPIKES,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.SNEAK_ATTACK,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.TELEKINETIC_BLAST,
			SPELLS.COLLAPSE_SPACE,
			SPELLS.EXPAND_TIME,
			SPELLS.SPHERAS_DEMISE
		);
	#endregion
	
	#region		CLEANSAGE
		var cleansageSpells = ds_list_create();
		
		ds_list_add(cleansageSpells,
			SPELLS.FIREBALL,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.TYPHOON,
			SPELLS.HEALING_LIGHT,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.AIR_PRESSURE,
			SPELLS.SUPERBLOOM,
			SPELLS.INTERCEPT,
			SPELLS.STEAM_BATH,
			SPELLS.EMPATHIZE,
			SPELLS.DRAIN_LIFEFORCE,
			SPELLS.SHIFT_PERSPECTIVE,
			SPELLS.PURIFYING_FLAME,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.BURN_OUT,
			SPELLS.STINKBOMB,
			SPELLS.WIND_SLICE,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.SPHERAS_CURSE,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.EXPAND_TIME
		);
	#endregion
	
	#region		WYRMPOOL
		var wyrmpoolSpells = ds_list_create();
		
		ds_list_add(wyrmpoolSpells,
			SPELLS.TIDAL_FORCE,
			SPELLS.TYPHOON,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.WATERLOG,
			SPELLS.AIR_PRESSURE,
			SPELLS.UNDERTOW,
			SPELLS.DOWNPOUR,
			SPELLS.FLASH_FREEZE,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.ENDLESS_RIVER,
			SPELLS.CLOUD_BREAK
		);
	#endregion
	
	#region		CRAGMA
		var cragmaSpells = ds_list_create();
		
		ds_list_add(cragmaSpells,
			SPELLS.TECTONIC_SHIFT,
			SPELLS.FIREBALL,
			SPELLS.HELLFIRE,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.CRECIAS_CRYSTAL_SPIKES,
			SPELLS.BURN_OUT,
			SPELLS.STINKBOMB,
			SPELLS.LAVA_SPIRE
		);
	#endregion
	
	#region		CORVOLT
		var corvoltSpells = ds_list_create();
		
		ds_list_add(corvoltSpells,
			SPELLS.NEBULA_STORM,
			SPELLS.SHOCK,
			SPELLS.TYPHOON,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.AIR_PRESSURE,
			SPELLS.BALL_LIGHTNING,
			SPELLS.DOWNPOUR,
			SPELLS.ARC_BLAST,
			SPELLS.SKYDIVE,
			SPELLS.WIND_SLICE,
			SPELLS.CLOUD_BREAK
		);
	#endregion
	
	#region		CHROMOSILOS
		var chromosilosSpells = ds_list_create();
		
		ds_list_add(chromosilosSpells,
			SPELLS.TECTONIC_SHIFT,
			SPELLS.FIREBALL,
			SPELLS.SHOCK,
			SPELLS.LOOMING_DANGER,
			SPELLS.HELLFIRE,
			SPELLS.ARC_BLAST,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.BURN_OUT,
			SPELLS.LAVA_SPIRE,
			SPELLS.FULL_THRUST
		);
	#endregion
	
	#region		DOMINO
		var dominoSpells = ds_list_create();
		
		ds_list_add(dominoSpells,
			SPELLS.FIREBALL,
			SPELLS.SHOCK,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.RAPID_STRIKE,
			SPELLS.LOOMING_DANGER,
			SPELLS.INTERCEPT,
			SPELLS.HELLFIRE,
			SPELLS.LORD_MOGRADTHS_RAGE,
			SPELLS.DRAIN_LIFEFORCE,
			SPELLS.PYROKINESIS,
			SPELLS.ARC_BLAST,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.SHIFT_PERSPECTIVE,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.JABULS_FIGHT_SONG,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.REARRANGE,
			SPELLS.SNEAK_ATTACK,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.DIONS_PARRY,
			SPELLS.DIONS_GAMBLING_BLAST,
			SPELLS.DIONS_BARTER_TRICK,
			SPELLS.FULL_THRUST,
			SPELLS.BROADCAST_DATA,
			SPELLS.SPHERAS_DEMISE
		);
	#endregion
	
	#region		ANACHRONAUT
		var anachronautSpells = ds_list_create();
		
		ds_list_add(anachronautSpells,
			SPELLS.SOLAR_FLARE,
			SPELLS.TIDAL_FORCE,
			SPELLS.NEBULA_STORM,
			SPELLS.TECTONIC_SHIFT,
			SPELLS.SHOCK,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.HEALING_LIGHT,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.ENDLESS_RIVER,
			SPELLS.TELEKINETIC_BLAST,
			SPELLS.BROADCAST_DATA,
			SPELLS.EXPAND_TIME,
			SPELLS.SPHERAS_DEMISE
		);
	#endregion
	
	#region		OMNOST
		var omnostSpells = ds_list_create();
		
		ds_list_add(omnostSpells,
			SPELLS.SOLAR_FLARE,
			SPELLS.TIDAL_FORCE,
			SPELLS.NEBULA_STORM,
			SPELLS.TECTONIC_SHIFT,
			SPELLS.FIREBALL,
			SPELLS.HOLY_WATER,
			SPELLS.SHOCK,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.LADY_SOLANUS_GRACE,
			SPELLS.TYPHOON,
			SPELLS.HEALING_LIGHT,
			SPELLS.RUBURS_WATER_CANNON,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.WATERLOG,
			SPELLS.AIR_PRESSURE,
			SPELLS.SUPERBLOOM,
			SPELLS.LOOMING_DANGER,
			SPELLS.STEAM_BATH,
			SPELLS.UNDERTOW,
			SPELLS.HELLFIRE,
			SPELLS.BALL_LIGHTNING,
			SPELLS.QUICKSAND,
			SPELLS.LORD_MOGRADTHS_RAGE,
			SPELLS.PYROKINESIS,
			SPELLS.DOWNPOUR,
			SPELLS.ARC_BLAST,
			SPELLS.HIKAMS_WINTER_SPELL,
			SPELLS.OSMOSIS,
			SPELLS.FLASH_FREEZE,
			SPELLS.LANDSLIDE,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.SHIFT_PERSPECTIVE,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.TREMOR,
			SPELLS.PURIFYING_FLAME,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.CRECIAS_CRYSTAL_SPIKES,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.REARRANGE,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.DIONS_GAMBLING_BLAST,
			SPELLS.DIONS_BARTER_TRICK,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.BURN_OUT,
			SPELLS.STINKBOMB,
			SPELLS.WIND_SLICE,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.SPHERAS_CURSE,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.LAVA_SPIRE,
			SPELLS.ENDLESS_RIVER,
			SPELLS.CLOUD_BREAK,
			SPELLS.BROADCAST_DATA
		);
	#endregion
	
	#region		PRISMATTER
		var prismatterSpells = ds_list_create();
		
		ds_list_add(prismatterSpells,
			SPELLS.SOLAR_FLARE,
			SPELLS.TIDAL_FORCE,
			SPELLS.NEBULA_STORM,
			SPELLS.TECTONIC_SHIFT,
			SPELLS.RUBURS_GRAPPLE,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.AIR_PRESSURE,
			SPELLS.SUPERBLOOM,
			SPELLS.RAPID_STRIKE,
			SPELLS.INTERCEPT,
			SPELLS.UNDERTOW,
			SPELLS.QUICKSAND,
			SPELLS.HIKAMS_WINTER_SPELL,
			SPELLS.LANDSLIDE,
			SPELLS.TREMOR,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.CRECIAS_CRYSTAL_SPIKES,
			SPELLS.REARRANGE,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.DIONS_PARRY,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.BURN_OUT,
			SPELLS.WIND_SLICE,
			SPELLS.CRECIAS_CRYSTAL_WIND,
			SPELLS.LAVA_SPIRE,
			SPELLS.ENDLESS_RIVER,
			SPELLS.CLOUD_BREAK,
			SPELLS.TELEKINETIC_BLAST,
			SPELLS.DESTABILIZING_BLOW,
			SPELLS.FULL_THRUST,
			SPELLS.COLLAPSE_SPACE
		);
	#endregion
	
	#region		KRONARC
		var kronarcSpells = ds_list_create();
		
		ds_list_add(kronarcSpells,
			SPELLS.SOLAR_FLARE,
			SPELLS.TIDAL_FORCE,
			SPELLS.NEBULA_STORM,
			SPELLS.TECTONIC_SHIFT,
			SPELLS.HOLY_WATER,
			SPELLS.SHOCK,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.LUSIAS_HARVEST_SPELL,
			SPELLS.SUPERBLOOM,
			SPELLS.LOOMING_DANGER,
			SPELLS.INTERCEPT,
			SPELLS.HIKAMS_WINTER_SPELL,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.TREMOR,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.MAGNETIC_PULSE,
			SPELLS.WIND_SLICE,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.SPHERAS_CURSE,
			SPELLS.LAVA_SPIRE,
			SPELLS.ENDLESS_RIVER,
			SPELLS.TELEKINETIC_BLAST,
			SPELLS.EXPAND_TIME,
			SPELLS.SPHERAS_DEMISE
		);
			
	#endregion
	
	#region		COSMALCOS
		var cosmalcosSpells = ds_list_create();
		
		ds_list_add(cosmalcosSpells,
			SPELLS.HOLY_WATER,
			SPELLS.DECAY,
			SPELLS.EXPEL_FORCE,
			SPELLS.SUPERBLOOM,
			SPELLS.LOOMING_DANGER,
			SPELLS.HELLFIRE,
			SPELLS.LORD_MOGRADTHS_RAGE,
			SPELLS.DRAIN_LIFEFORCE,
			SPELLS.DRAIN_LIFEFORCE,
			SPELLS.HIKAMS_WINTER_SPELL,
			SPELLS.AMANDS_ENERGY_BLAST,
			SPELLS.PSYCHIC_IMPACT,
			SPELLS.DESTRUCTIVE_BLOW,
			SPELLS.NOXIOUS_FUMES,
			SPELLS.PSYCHIC_FISSURE,
			SPELLS.DEFLECTIVE_SHIELD,
			SPELLS.DIONS_PARRY,
			SPELLS.DIONS_BARTER_TRICK,
			SPELLS.STINKBOMB,
			SPELLS.CHANNEL_ESSENCE,
			SPELLS.SPHERAS_CURSE,
			SPELLS.TELEKINETIC_BLAST,
			SPELLS.SPHERAS_DEMISE
		);
	#endregion

#endregion

#region CREATE SPRITE GRID

global.spriteGrid = ds_grid_create(SPRITE_PARAMS.HEIGHT, SPRITES.HEIGHT);

function sprite_add_to_grid(_ID) {
	var i = 0; repeat (SPRITE_PARAMS.HEIGHT) {
		ds_grid_add(global.spriteGrid, i, _ID, argument[i]);
		
		i++;
	}
}
	
#region ALL SPRITE DATA
//					ID						NAME										ALIGNMENT				USABLE SPELLS						POWER	RES		FIRE	WATER	STORM	EARTH	AGL		LUCK	SIZE
sprite_add_to_grid(SPRITES.GEMBO,			"GEMBO",			spr_gemboBattle,		ALIGNMENTS.ASTRAL,		encode_list(gemboSpells),			120,	120,	115,	100,	115,	100,	70,		90,		SPRITE_SIZES.MEDIUM);
sprite_add_to_grid(SPRITES.PONDILE,			"PONDILE",			spr_pondileBattle,		ALIGNMENTS.NATURAL,		encode_list(pondileSpells),			110,	75,		70,		140,	90,		90,		130,	80,		SPRITE_SIZES.MEDIUM);
sprite_add_to_grid(SPRITES.HACHACHACHA,		"HACHA-CHACHA",		spr_hachaChachaBattle,	ALIGNMENTS.NATURAL,		encode_list(hachaSpells),			80,		50,		190,	35,		70,		110,	90,		150,	SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.PODRIC,			"PODRIC",			spr_podricBattle,		ALIGNMENTS.NATURAL,		encode_list(podricSpells),			165,	70,		30,		90,		40,		180,	160,	100,	SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.NEEDLEPAW,		"NEEDLEPAW",		spr_needlepawBattle,	ALIGNMENTS.ASTRAL,		encode_list(needlepawSpells),		130,	70,		110,	55,		130,	110,	180,	50,		SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.SUDSY,			"SUDSY",			spr_mrSudsyBattle,		ALIGNMENTS.MECHANICAL,	encode_list(sudsySpells),			60,		70,		60,		150,	60,		60,		170,	150,	SPRITE_SIZES.X_SMALL);
sprite_add_to_grid(SPRITES.BOOKISH,			"BOOKISH",			spr_bookishBattle,		ALIGNMENTS.MECHANICAL,	encode_list(bookishSpells),			50,		50,		120,	120,	120,	120,	80,		90,		SPRITE_SIZES.X_SMALL);
sprite_add_to_grid(SPRITES.PLEEP,			"PLEEP",			spr_pleepBattle,		ALIGNMENTS.ASTRAL,		encode_list(pleepSpells),			110,	80,		100,	70,		150,	50,		100,	100,	SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.GLIDRAKE,		"GLIDRAKE",			spr_glidrakeBattle,		ALIGNMENTS.NATURAL,		encode_list(glidrakeSpells),		100,	60,		110,	80,		160,	50,		150,	90,		SPRITE_SIZES.MEDIUM);
sprite_add_to_grid(SPRITES.FURVOR,			"FURVOR",			spr_furvorBattle,		ALIGNMENTS.NATURAL,		encode_list(furvorSpells),			140,	90,		110,	55,		85,		110,	130,	80,		SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.ZEPHIRA,			"ZEPHIRA",			spr_zephiraBattle,		ALIGNMENTS.ASTRAL,		encode_list(zephiraSpells),			100,	60,		70,		90,		160,	110,	140,	100,	SPRITE_SIZES.X_SMALL);
sprite_add_to_grid(SPRITES.FISHMONGER,		"FISHMONGER",		spr_fishmongerBattle,	ALIGNMENTS.NATURAL,		encode_list(fishmongerSpells),		150,	130,	70,		150,	90,		80,		85,		80,		SPRITE_SIZES.MEDIUM);
sprite_add_to_grid(SPRITES.SONGBIRD,		"SONGBIRD",			spr_songbirdBattle,		ALIGNMENTS.ASTRAL,		encode_list(songbirdSpells),		70,		90,		80,		90,		125,	100,	120,	150,	SPRITE_SIZES.MEDIUM);
sprite_add_to_grid(SPRITES.EXONOLITH,		"EXONOLITH",		spr_exonolithBattle,	ALIGNMENTS.ASTRAL,		encode_list(exonolithSpells),		100,	190,	90,		60,		90,		140,	50,		100,	SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.DRUMLINE,		"DRUMLINE",			spr_drumlineBattle,		ALIGNMENTS.MECHANICAL,	encode_list(drumlineSpells),		80,		145,	75,		75,		90,		100,	120,	150,	SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.MIRREFRACT,		"MIRREFRACT",		spr_mirrefractBattle,	ALIGNMENTS.MECHANICAL,	encode_list(mirrefractSpells),		100,	130,	90,		60,		120,	130,	110,	85,		SPRITE_SIZES.MEDIUM);
sprite_add_to_grid(SPRITES.FORTUGA,			"FORTUGA",			spr_fortugaBattle,		ALIGNMENTS.NATURAL,		encode_list(fortugaSpells),			100,	180,	65,		130,	65,		130,	60,		100,	SPRITE_SIZES.X_LARGE);
sprite_add_to_grid(SPRITES.TIKDOFF,			"TIKDOF",			spr_tikdoffBattle,		ALIGNMENTS.MECHANICAL,	encode_list(tikdoffSpells),			145,	95,		190,	40,		80,		70,		120,	85,		SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.ARRAYNGE,		"ARRAYNGE",			spr_arrayngeBattle,		ALIGNMENTS.MECHANICAL,	encode_list(arrayngeSpells),		65,		85,		100,	90,		150,	90,		115,	100,	SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.SCROOTINEYES,	"SCROOTINEYES",		spr_scrootineyesBattle,	ALIGNMENTS.NATURAL,		encode_list(scrootineyesSpells),	110,	100,	70,		70,		130,	70,		70,		120,	SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.JOE,				"JOE",				spr_joeBattle,			ALIGNMENTS.MECHANICAL,	encode_list(joeSpells),				160,	115,	110,	110,	70,		85,		100,	85,		SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.CANUKI,			"CANUKI",			spr_canukiBattle,		ALIGNMENTS.NATURAL,		encode_list(canukiSpells),			145,	165,	70,		70,		70,		140,	80,		85,		SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.GASTRONIMO,		"GASTRONIMO",		spr_gastronimoBattle,	ALIGNMENTS.MECHANICAL,	encode_list(gastronimoSpells),		140,	140,	100,	100,	70,		120,	60,		100,	SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.FLOTSU,			"FLOTSU",			spr_flotsuBattle,		ALIGNMENTS.NATURAL,		encode_list(flotsuSpells),			90,		135,	50,		180,	120,	100,	60,		100,	SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.BLITZKRANE,		"BLITZKRANE",		spr_blitzkraneBattle,	ALIGNMENTS.ASTRAL,		encode_list(blitzkraneSpells),		140,	90,		60,		100,	165,	70,		135,	75,		SPRITE_SIZES.X_LARGE);
sprite_add_to_grid(SPRITES.HEATSUNE,		"HEATSUNE",			spr_heatsuneBattle,		ALIGNMENTS.ASTRAL,		encode_list(heatsuneSpells),		110,	70,		170,	50,		115,	100,	135,	85,		SPRITE_SIZES.MEDIUM);
sprite_add_to_grid(SPRITES.FLOOPWALKER,		"FLOOPWALKER",		spr_floopwalkerBattle,	ALIGNMENTS.ASTRAL,		encode_list(floopwalkerSpells),		65,		100,	90,		90,		120,	120,	120,	125,	SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.STEWARDRAKE,		"STEWARDRAKE",		spr_stewardrakeBattle,	ALIGNMENTS.ASTRAL,		encode_list(stewardrakeSpells),		65,		140,	120,	90,		120,	90,		100,	100,	SPRITE_SIZES.MEDIUM);
sprite_add_to_grid(SPRITES.DOORMAUS,		"DOORMAUS",			spr_doormausBattle,		ALIGNMENTS.ASTRAL,		encode_list(doormausSpells),		50,		85,		110,	110,	110,	110,	160,	100,	SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.PLASMASS,		"PLASMASS",			spr_plasmassBattle,		ALIGNMENTS.MECHANICAL,	encode_list(plasmassSpells),		130,	100,	120,	45,		180,	45,		165,	50,		SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.SHREDATOR,		"SHREDATOR",		spr_shredatorBattle,	ALIGNMENTS.NATURAL,		encode_list(shredatorSpells),		170,	110,	45,		165,	80,		60,		130,	75,		SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.JACKHAMMER,		"JACKHAMMER",		spr_jackhammerBattle,	ALIGNMENTS.ASTRAL,		encode_list(jackhammerSpells),		160,	120,	35,		60,		70,		80,		160,	150,	SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.STINKLOPS,		"STINKLOPS",		spr_capnClopsBattle,	ALIGNMENTS.NATURAL,		encode_list(stinklopsSpells),		190,	135,	110,	70,		80,		125,	90,		35,		SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.DURENDOUX,		"DURENDOUX",		spr_durendouxBattle,	ALIGNMENTS.ASTRAL,		encode_list(durendouxSpells),		135,	185,	80,		40,		40,		160,	45,		150,	SPRITE_SIZES.MEDIUM);
sprite_add_to_grid(SPRITES.CENOTOMB,		"CENOTOMB",			spr_cenotombBattle,		ALIGNMENTS.ASTRAL,		encode_list(cenotombSpells),		150,	120,	120,	60,		90,		90,		90,		100,	SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.CLEANSAGE,		"CLEANSAGE",		spr_cleansageBattle,	ALIGNMENTS.ASTRAL,		encode_list(cleansageSpells),		90,		140,	120,	70,		90,		140,	35,		80,		SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.WYRMPOOL,		"WYRMPOOL",			spr_wyrmpoolBattle,		ALIGNMENTS.ASTRAL,		encode_list(wyrmpoolSpells),		130,	120,	35,		170,	140,	35,		80,		125,	SPRITE_SIZES.X_LARGE);
sprite_add_to_grid(SPRITES.CRAGMA,			"CRAGMA",			spr_cragmaBattle,		ALIGNMENTS.NATURAL,		encode_list(cragmaSpells),			170,	150,	170,	30,		30,		150,	35,		100,	SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.CORVOLT,			"CORVOLT",			spr_corvoltBattle,		ALIGNMENTS.NATURAL,		encode_list(corvoltSpells),			120,	130,	60,		120,	140,	60,		110,	100,	SPRITE_SIZES.LARGE);
sprite_add_to_grid(SPRITES.CHROMOSILOS,		"CHROMOSILOS",		spr_chromosilosBattle,	ALIGNMENTS.MECHANICAL,	encode_list(chromosilosSpells),		190,	140,	120,	40,		40,		160,	70,		75,		SPRITE_SIZES.X_LARGE);
sprite_add_to_grid(SPRITES.DOMINO,			"DOMINO",			spr_dominoBattle,		ALIGNMENTS.MECHANICAL,	encode_list(dominoSpells),			135,	70,		85,		85,		85,		85,		140,	150,	SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.ANACHRONAUT,		"ANACHRONAUT",		spr_anachronautBattle,	ALIGNMENTS.MECHANICAL,	encode_list(anachronautSpells),		35,		60,		120,	120,	120,	120,	160,	100,	SPRITE_SIZES.SMALL);
sprite_add_to_grid(SPRITES.OMNOST,			"OMNOST",			spr_omnostBattle,		-1,						encode_list(omnostSpells),			50,		100,	110,	110,	150,	110,	70,		150,	SPRITE_SIZES.X_LARGE);
sprite_add_to_grid(SPRITES.PRISMATTER,		"PRISMATTER",		spr_prismatterBattle,	-1,						encode_list(prismatterSpells),		175,	175,	80,		80,		80,		150,	75,		35,		SPRITE_SIZES.X_LARGE);
sprite_add_to_grid(SPRITES.KRONARC,			"KRONARC",			spr_kronarcBattle,		-1,						encode_list(kronarcSpells),			100,	100,	100,	100,	100,	100,	100,	150,	SPRITE_SIZES.X_LARGE);
sprite_add_to_grid(SPRITES.COSMALCOS,		"COSMALCOS",		spr_cosmalcosBattle,	-1,						encode_list(cosmalcosSpells),		120,	180,	30,		30,		30,		30,		30,		150,	SPRITE_SIZES.X_LARGE);

#endregion

// encode grid
global.allSprites = encode_grid(global.spriteGrid);

// delete grid

#endregion

function sprite_get_stat(_stat, _sprite) {
	var sp	= _sprite;
	var st	= _stat;
	var g	= global.spriteGrid;
	
	var val	= g[# st,	sp];
	return val;
}

function sprite_load_parameters() {
	// decode sprite grid
	var grid = ds_grid_create(SPRITE_PARAMS.HEIGHT, SPRITES.HEIGHT);
	decode_grid(global.allSprites, grid);
	
	// use sprite grid to get parameters
	name				= grid[# SPRITE_PARAMS.NAME,			spriteID];
	sprite				= real(grid[# SPRITE_PARAMS.SPRITE,		spriteID]);
	baseAlign			= real(grid[# SPRITE_PARAMS.ALIGNMENT,	spriteID]);
	var spellString		= grid[# SPRITE_PARAMS.SPELL_LIST,		spriteID];
	basePower			= real(grid[# SPRITE_PARAMS.POWER,		spriteID]);
	baseResistance		= real(grid[# SPRITE_PARAMS.RESISTANCE,	spriteID]);
	baseFire			= real(grid[# SPRITE_PARAMS.FIRE,		spriteID]);
	baseWater			= real(grid[# SPRITE_PARAMS.WATER,		spriteID]);
	baseStorm			= real(grid[# SPRITE_PARAMS.STORM,		spriteID]);
	baseEarth			= real(grid[# SPRITE_PARAMS.EARTH,		spriteID]);
	baseAgility			= real(grid[# SPRITE_PARAMS.AGILITY,	spriteID]);
	baseLuck			= real(grid[# SPRITE_PARAMS.LUCK,		spriteID]);
	baseSize			= real(grid[# SPRITE_PARAMS.SIZE,		spriteID]);
	
	// decode spell list
	decode_list(spellString, usable_spells);
	
	// delete sprite grid
	ds_grid_destroy(grid);
}

function sprite_get_alignment_string(_alignment) {
	var a = _alignment;
	
	switch (a) {
		case ALIGNMENTS.ASTRAL:		return "ASTRAL";
		case ALIGNMENTS.MECHANICAL:	return "MECHANICAL";
		case ALIGNMENTS.NATURAL:	return "NATURAL";
	}
}

function sprite_get_size_string(_size) {
	var s = _size;
	
	switch (s) {
		case SPRITE_SIZES.X_SMALL:	return "X-SMALL";
		case SPRITE_SIZES.SMALL:		return "SMALL";
		case SPRITE_SIZES.MEDIUM:	return "MEDIUM";
		case SPRITE_SIZES.LARGE:		return "LARGE";
		case SPRITE_SIZES.X_LARGE:	return "X-LARGE";
	}
}