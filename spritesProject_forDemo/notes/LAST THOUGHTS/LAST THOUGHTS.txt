

It's been a while since I checked in here, I deleted all past notes so I can start fresh with the demo from here on out.

I'm going to start by building a list of everything that needs to be finished with the battle scene, then I'll refer to that list
in each of the "last thoughts" notes to follow.

BATTLE SCENE TODO:

	-spell info display						2 POINTS				2 POINTS DONE
	-spellFX screen functions				5 POINTS				5 POINTS DONE
	-make spell UI adhere to knownSpells	4 POINTS				4 POINTS DONE
	-prototype turn selection algorithm		3 POINTS				
	-add spell animations					4 POINTS				4 POINTS DONE
	-finish spells and effects				2 POINTS				2 POINTS DONE
	-add abilities							4 POINTS				
	-priority spells						2 POINTS				2 POINTS DONE
	-add all new sprites					2 POINTS				2 POINTS DONE
	-create demo scripts*					2 POINTS
	-program spellbook icons				1 POINT					1 POINT DONE
	-program sparSwapProcessor				2 POINTS				2 POINTS DONE
	-program sparRestProcessor				2 POINTS				2 POINTS DONE
	-program sparDodgeProcessor				2 POINTS				2 POINTS DONE
	-add turn number screen					2 POINTS				
	-finish sparActionProcessor				4 POINTS				4 POINTS DONE
	-create turn message functionality		1 POINT					1 POINT DONE
	-fix ready display						2 POINTS				2 POINTS DONE
	-fix fonts								3 POINTS				3 POINTS DONE
	-build audio manager					3 POINTS
	-add music								4 POINTS				
	-add all SFX							4 POINTS				4 POINTS DONE
	-add hp and mp bars						1 POINT					1 POINT DONE
	-complete nearby list functionality		1 POINT					1 POINT DONE
	-switch out all sprite artwork			2 POINTS				2 POINTS DONE
	-agility sort							3 POINTS				3 POINTS DONE
	-build teambuilder						5 POINTS				5 POINTS DONE
	-build spellBookBuilder					5 POINTS				5 POINTS DONE
	-build onlineLobby						5 POINTS				5 POINTS DONE
	-test client for private rooms			5 POINTS				5 POINTS DONE
	-test client for matchmaking			5 POINTS
	
	*demo scripts cannot be built until full versions are complete (npcs, sprites, spells, abilities)
	
1/16 (added hp and mp bars) &&& (fixed ready display)

		This was my first time back working on the battle scene. It feels good that there's not much left to complete.
	I finally tackled the issue concerning the direction in which a sprite is stretched by the draw_sprite_stretched function. I am
	now drawing the player's and enemy's hp and mp bars to two separate surfaces. The player's surface is then drawn with an x
	scale of -1 using the draw_surface_ext function.
	
		Fixing the ready display was more of a difficult matter. First I had to fix the format_text function. I made it more specific to the
	ready display system, and I added a note about that to the description of the function. Once that was fixed, I decided to take the names 
	out of the picture completely and replace them with a reference to their enemy or ally number respectively. This will make it easier as 
	well when the player is seeing a sprite for the first time and they don't yet know the sprite's name. I also changed the font to the 
	plainFont since it's much easier to fit everything on the banner in an organized fashion.
	
1/17 
	
		Today I just did some tidying up (corrected the casing of all the sprite and spell enums). I also commented out some yet-to-be-written
	processes. I also started working on spell functions, but only completed the solar flare function.
	
		I need to determine exactly how it should look in-game when a swap occurs (this means intentionally and by some spell effect). Ideally,
	the same object will be used for both types of swaps, and any pre-turn swapping will occur all at once. I would love to have an animation
	that covers the sprites when the swap occurs, but I think it would be best to get the process working first and then see what might look good.
	
	
2/1 
		Today I tried my best to get the rest processor working completely. As expected, there are a few bugs leftover, but most of the functionality is
	there. Here is a list of bugs to tackle tomorrow:
	
		- animation isn't stopping once it's finished. Do real-time-debugging and watch spar.image_index
		- mp bar isn't being corrected. I put a breakpoint where the mp is being replenished so that I can watch what happens there.
		- not really a bug, but I don't like the pace of the hourglass wiggle. Try some other stuff and see if you can get it right.
		
		Aside from that, I also decided I should add a moment before the process phase where a black screen fades in halway and the current turn number is displayed.
	This would offer a nice beat between the clicking of the ready button and the beginning of the turn, but it would also be a good way to get the turn number in
	there somehow as there isn't room for it in the UI as of right now.
	
	Good luck tomorrow!
	
	
2/2		(finished rest processor)
		Today I finished the rest processor. The bugs were easy fixes. I removed the hourglass because I didn't like the look of it.
	Everything feels smooth and I'm ready to move on to the action processor. There are however a few bugs I'll note here:
		
		- The game currently breaks if you don't do a swap, I'm thinking that this has something to do with the rest check in the swap step event
		- Not really a bug, but you need to figure out how to go about telling the player whether they have enough MP to swap, and then deplete that MP upon swapping.
		
	That's actually all the bugs I can think of currently, I'll test the game in the morning and see if there's anything else that pops up.
	
2/3
		Today I did some debugging. You can now take multiple turns per test and there is no problem with selecting only rests. Dodges and basic attacks are next!
		
2/5	(finished dodge announcer, finished turn message functionality, fixed fonts)

	Today was a good day! Let's keep the momentum going! Tomorrow finish up priority spells and get started on the action processor!
	
	The priority spell list has been started in the spells script. The check for priority spells is happening in the priority case of the switch statement
	in the spar object step event. Good luck!
	
2/9 
	-finish spell functions
	-create a non-demo version of the spell icon art sheet
	-test priority spells
	
	
	finished most spell functions. Here are some things to keep note of:
		-	going to change rearrange and tidal force so that the swap occurs at the end of the effect
		-	need to redo damage calculation functions so that I can finish pyrokinesis, psychic impact, and psychic fissure
		
		
2/16
	Today I added all of the 4 frame sprite artwork. I also brought over the corrected scripts from the calculator.
	The spell animations have also been added into the game, now I just need to program the spellFX object!
	
	Start your next session by correcting the damage calculation functions so that they work in the context of the
	sparActionProcessor. Then test a basic attack, then start working on spells!
	
2/17 
	Today I finished the sparActionProcessor.
	
	The two main things left before spells will be totally ready are:
		-write the spellFX object (step phase should basically copy the dodge FX logic in the actionProcessor step phase
		-write a means for finding the next sprite to cast a spell/make a basic attack (wrote pseudocode in a note on my phone)
		
2/18
	I'm almost to the point where I can successfully make a basic attack.
	
	There is still some debugging left to do before I can move on from basic attacks to spells.
	
	I also started working on the first turntaking algorithm called mercurio_selection_algorithm
	
2/19

		I finished up basic attacks and I'm moving onto spells. I created a script called scr_spellFX where you can build
	the lists of spell animations and spellFX functions.
	
		I also fixed the spellBook UI, so you can effectively select a spell now. There is still some debugging to do.
		
		Spells are working! And the spellFX script is mostly built. Should be a breeze!
		
2/20
		Okay, we are officially in the "finishing up" phase. Spells are testable and fully working with animations and 
	everything. The last three systems to finish building are the online multiplayer, the spellFX functions, and the 
	local enemy turntaking algorithms.
	
		Aside from that, Yiming and I both just have a lot of art (and I have music and SFX) to finish creating. I THINK NOW
	WOULD BE A GOOD TIME TO DO SOME TESTING TO PUT TOGETHER A LIST OF BUGS AS WELL UI FAILINGS AND THINGS THAT I DON'T FEEL
	FLOW WELL.
	
3/5

		Wrote most of the code for the teambuilder. Need to test it still. There is a line of code in the overworld create event
	that is forcing a spar to begin right at the beginning. Find a way to alter this for the sake of testing the teambuilder.
	
	
	I DETERMINED THE BEST NEXT STEP FOR TESTING TEAMBUILDER AND OTHER MENUS:
	
		just build the overworld main menu. It needs to get done, it's a pivotal part of the overworld. This will allow you to fully
		test every menu nested within in an isolated fashion. 
		
		
3/8 
		A GMS update broke my game again. The problem is definitely somewhere in the overworld create event. The wrong data is being pulled
		from the locationGrid somehow. This either means that indeces are not lining up anymore, or something about the decode_grid function
		is not working properly. 
		
		Good luck. Thanks GMS -_-
		
		Got the GMS related bugs sorted out and everything is running fine again. Now to try and fix the issues with the playtest build!
		
		
COMING BACK FROM PLAYTEST BUILD

	Before I go into detail about the first steps coming back from the playtest build/doing serverside work, I'm going to go through each script and
	do some serious organizing.
	
	As you go through each script, follow these steps to quickly organize:
	
		-Check each declaration on the page
		-make sure that the function/variable is still necessary--if not, safely delete the declaration and all references to it
		-make sure that the function/variable has an adequate description and that associated lines have in-line comments
		-make sure that the function/variable is on the right page/in the right spot--this means both the regrouping/reordering of items on the page,
			but also the moving of different items onto different scripts when necessary
			
		GENERAL SCRIPTS HAVE BEEN COMPLETED!
			notes:	need to figure out what to do with keypads. If you want to keep it, then rework it and make
					it cleaner. If you don't want to keep it, find a way to safely delete all of it.
					
		OVERWORLD SCRIPTS HAVE BEEN COMPLETED!
			notes:	ended up deleting all references to keypads, I was also able to completely get rid of the lighting script which
					is pretty cool. Hopefully the downsizing continues!
					
		PLAYER SCRIPTS HAVE BEEN COMPLETED!
			notes:	took this opportunity to change the player's draw function back to the more optimal version wherein
					the player character is drawn layer by layer each step for each of their clothing items, as opposed
					to dynamically creating a sprite to be used.
		


	5/27

	okay, I've taken a break from working on spring cleaning. Soon enough, I'll finish the sparring scripts and then get
	started on objects. I finally got the spell animations and all of that looking pretty good. The lack of a basic attack
	animation is really obvious now.
	
	I need to see what the pose functionality looks like with this new system. If I need to wait until the final release,
	that's fine. If it doesn't look good, that's even finer.
	
	FINAL STEPS FOR SPARS:
	
		-FINISH ALL ABILITY FUNCTIONS
		-FINISH ABILITY TYPE ENUM
		-FINISH ABILITY GRID
		-FINISH ALL ABILITY CHECK FUNCTIONS AND CALLS
		
		-FIX READY DISPLAY TEXT
		
		-CREATE EFFECTS ENUM
		-FINISH EFFECT ALERT OBJECT
		-ADD EFFECT ANIMATIONS
		-FIX SPELL EFFECT SYSTEM SO THAT IT STORES 
			AN ID THAT GETS ADDED TO THE ALERT LIST 
			(DON'T JUST CALL THE FUNCTION IN THE ACTION PROCESSOR)
			
			
			
	5/28
	
		Started doing some p heavy work on the new spar effects system. I'm going to work more on it tonight and give a more
		solid explanation of the overall system. For now, here is this list:
			-finish all spar effect functions
			-replace spar effect function calls in spell functions with spar_effect_push_alert
			-build sparAlert object
			
	5/29
	
		Still working on the replacing all of the spar effect function calls with spar_effect_push_alert.
		
		I left off at ball_lightning!
		
	5/30
	
		Added some more effects. Still finishing up spell effect call replacements. I left off at Hikams
		
	5/31 
	
		LEFT OFF AT REARRANGE!
		
	6/1 
		LEFT OFF AT BARTER TRICK!!
		
		Finished replacing all of the references in the spell functions. The next steps are listed below:
			- finish all spar_effect functions
			- finish all spar_effect alert texts
			- finish sparEffectAlert object
			- finish all ability functions
			- add all ability checks
			- add spellFail check
			- add all effect checks
			
		Started working on spar effect functions
		
	6/2
		CONTINUING SPAR EFFECT FUNCTIONS ---- LEFT OFF AT ENERGY_BLAST_GLOBAL
		
		LIST OF REMAINING TASKS:
			- ability checks
			- ability functions
			- ability check functions
			- effect checks
			- effect check functions
			- effect alert text
			- effect animation timing (display animation after clicking through or loop animation until click through)
			- effect animation placement
			- effect animation sprites
			- damage alteration check
			- spell fail check
			
	6/3
			ADD BERSERK AND INVULNERABLE ENDING FUNCTIONS FOR ALL SCOPES
			FIND ALL instance_destroy(id) ON EFFECTS SCRIPT AND ENSURE THAT THERE IS A ds_list_add(effectedSprites, AS WELL
			
			still working on adding references for effect animations	---- decide what to do about moves like sneak attack and skydive
	
	6/4
			Finished adding all sprite references to spar effect grid.
			I still need to add all of the currently existing effect animations
			Still need to finish the build alert text function and the effectAlert object
			
	6/6
	
			Finished setting subject/object/effectedPlayer/effectedSprites for every spar effect function
			need to finish the build alert text function
			then its time for abilities, ability checks and effect checks!
			
			I ended up getting some more work done. The effect alert system is finished, but there is
			some testing that needs to be done. If you run a match and cast a spell with an effect,
			you'll see the issue and can get to it.
			
	6/7
	
			Spar effects are working! I'll have to keep debugging every spell and every effect over time, but 
			that's what the playtesting phase is for!
			
			I'm going to start another note called spars remaining so that I can log bugs and unfinished code!
			
			Great job getting this up and running, playtesting is right around the corner!
			
	6/29
	
			I got most of the spell info display working. The last issues are within the format_text function. I can't
			seem to find a way to accurately and dynamically check the width of a string. There are a lot of kinks to work
			out with this. I think it may come down to doing kerning in a different way. Some of the positioning looks weird,
			I wonder if it's because I have all of the characters set to the far right of their respective panel as opposed to
			being centered.
			
	6/30
			I changed the format text function again and now it mostly works. I realized also that I don't need to draw the name
			on the info display, so I can either rework the layout to make more room for the description, or think of a way to use
			that space otherwise.
			
	7/1
			I finished the spell display and finished migrating assets over for the build I'm sending to Yiming
			
			It's time to implement the new effect that occurs during spell animations. Refer to the YimingTalkNotes
			for exact details on what should happen. Look into the fastest way to draw things in grayscale in gms2
		
	7/6
			Checking in on this document. 
			
			I'm currently working through the list of everything left in the battle scene that I'm keeping on the 
			SPARS REMAINING note document. Today I finished up all of the changes Yiming and I had talked about. 
			
			This is what the list looks like as I'm typing this:
			
								------BUGS------
				-selecting a spell then selecting swap with a different sprite resets the totalSelectionCost
				-lady solanu's grace creates a bug in the effect alert object
				-action reselection not resetting totalSelectionCost
				-hover menu is drawn in the wrong position (and looks generally ugly)
				-drain health call is selecting drain magic effect function
				-selecting a swap and a rest keeps the rest from restoring MP. Sometimes swaps don't charge MP.
				
						---INCOMPLETE---
				-turnBegin animation
				-battle start animation
				-win/lose screen
				-ability functions
				-ability grid
				-ability check functions
				-effect check functions
				-effect/ability check calls
				-damage alteration (damage effect spells list + damage effect check)
				-ready display
				-names not drawn
				-titles not drawn
				-turn timer
				
			Good luck <3 Things are looking great!!
			
			
	7/15
	
			TODAY I WAS WORKING THROUGH THE BUG THAT OCCURS AFTER USING LADY SOLANUS GRACE.
			
			THE PROBLEM:	CHECKING FOR SPELL FAILURE ONCE EFFECT ALERT HAS BEEN CREATED IS NOT GOOD
			SOLUTION:		MOVED THE SPELL FAILURE CHECK TO THE SPELL FUNCTION FOR LADY SOLANUS GRACE (ALSO FIXED HEALING LIGHT AND VOLCANIC ERUPTION)
			REMAINING:		STILL CHECKS FOR FAILURE TO EARLY TO SKIP THE ANIMATION. STILL NEED TO CORRECT ALL OTHER SPELLS WITH A FAILURE CONDITION.
			
			completed solving the bug. I moved the spellEffect call earlier in the action processor. This creates a new issue that I will add to the list of spar bugs
			
				NEW ISSUE:	spells that take damage into consideration must calculate damage within the spell function since the call now occurs before the damage calc.
								another option could be calcing damage in the create event and only applying it if necessary (this is optimal but might be difficult)
							
							
	7/22
			TODAY I WAS WORKING THROUGH THE RESETTING OF TOTAL SELECTION COST DEPENDING ON DIFFERENT TURN SELECTION CHANGES.
			
			SO FAR I'VE GOTTEN MOST OF THEM HAMMERED OUT. THERE ARE STILL A FEW REMAINING BUT IT'S HARD TO KEEP TRACK SO I'M GOING TO MAKE A LIST HERE
			
			
			
			SPRITE |	PREVIOUS ACTION		|	NEW ACTION			//										CORRECTION
			selAlly			swapping				any									subtract swap cost from totalSelectionCost. reset swapPartner's selection params.
			selAlly			spell					any									subtract original spellCost from totalSelectionCost.
					
					
	7/29
	
			Okay. Everything is a mess now. A lot of weird bugs are occurring. It's time to clean up the spar scripts and then do some in depth debugging. Be ready to rework
			systems if you need to. Currently the most bugs are produced when switching around different selections. There is also a bug wherein selecting fireball results in
			selecting to rest.
			
			Good luck <3
			
	
	8/11
			Okay, things are looking quite good!
			
			Last thing I was working on:
					Finished a few corrections regarding damage. NOTE-- this might have left me with some issues RE the subject and object of some sparEffectAlerts because I had thought
				it was no longer necessary to pass those arguments within the spar_effect_push_alert function call in some of the spell functions. I think I fixed them all, but I might
				have missed one or two.
				
					After I finished all of that, I was working on the effectCheck functions in scr_effectChecks. These functions are all meant to be called at different times during the
				spar (for example, spar_check_miasma would be called at the beginning of each turn). When you log on next, just get back to work on this script. Once this is finished, you
				can start finishing up all of the ability functions. Then the ability check functions, then place the ability check functions in their proper place!
				
	8/14
			I got a lot of work done with the effect check system. Most of the remaining checks are obvious, you just need to go through the functions on the effectCheck script
		and complete all of them. Once you've done that, just global search for each function to make sure it's being called in all of the right places.
		
			None of this has been tested so for, but once the rest of the functions are finished and in place, start testing out each effect!
			
			
	8/18
		Here is a short list of things I know I need to do:
			-add undertow, typhoon, and magnetic pulse to priority spells and change undertow and typhoon to force_swap (make sure MAGpulse has higher power than purifying flame)
			-make all ability functions and check functions!
			-make a spar_effect for ability calls so that they can always show the same alert animation and formatted text "__'s ability, _______ was triggered!"
			
	8/19
		Running into a weird bug. Recreate by attempting to swap the same sprite twice in one match. Watch spar.allyList and spar.teamList. Also check ready display before second swap
		
	8/30
		Finish the ability script and add place all ability check calls
		
	9/1	
		Abilities What's Left:
			- finish all ability functions (make sure these work seamlessly--proper references etc-- with the check function)
			- add ability name animation
			- test
			
		-add weak elemental spells that provide solid buffs
		
		sidestepped to work through some bugs with the books system. There are still some left. Keep chipping away at this on the side!
		
	9/11
		I've begun placing ability checks.
		
		I also made a function that performs an ability check on each sprite in order of agility. I'll have to add "tie-breaking" code here.
		
		Another thing I need to note is that I'm considering replacing any singular ability_check calls with ability_check and simply
		beginning each ability function with a check for that sprite's involvement.
		
	9/12
		placed all ability checks and tested hot_to_the_touch which is the only ability function I've coded thus far.
		
		There is a bug that occurs when hacha chacha casts a spell.